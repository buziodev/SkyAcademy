<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>